from optparse import OptionParser
import os
from Baselines.randomizations.randomize import config_path_settings, randomize_rankings


def get_args():
    parser = OptionParser()
    parser.add_option('-d', '--data_group', dest='data_group', default='train',
                      type='str', help='accepted args: train, test')
    parser.add_option('-f', '--randomization_method', dest='randomization_method',
                      type='str', default='RandTopN', help='accepted args: RandTopN, RandPair')
    (options, args) = parser.parse_args()
    return options


args = get_args()
config_path_settings(data_group=args.data_group)  # written to be compatible for PyCharm on iOS

# ====== calling randomize_rankings function ================
# weights generated by SVM rank
source_file = args.data_group + ".weights"
# name of file to be created
target_filename = "{}.randomized_{}_weights".format(args.data_group, args.randomization_method)
randomize_rankings(target_filename, source_file, args.randomization_method)












# todo: run script on train.weights
    #        rename swapped weights so .weights (one at a time b/c otherwise bugs)
    #                      --->  can only have one .weights file in a folder at a time
    #        in main.py
    # todo: put out, per position of click:
    #       run generate_click_data.py
    #       how likely it is to be observed per position